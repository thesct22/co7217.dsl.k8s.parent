/**
 * generated by Xtext 2.25.0
 */
package co7217.dsl.k8s.deployment.impl;

import co7217.dsl.k8s.deployment.Dep;
import co7217.dsl.k8s.deployment.DeploymentPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Dep</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co7217.dsl.k8s.deployment.impl.DepImpl#getReplicas <em>Replicas</em>}</li>
 *   <li>{@link co7217.dsl.k8s.deployment.impl.DepImpl#getContainers <em>Containers</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DepImpl extends HeaderImpl implements Dep
{
  /**
   * The default value of the '{@link #getReplicas() <em>Replicas</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReplicas()
   * @generated
   * @ordered
   */
  protected static final int REPLICAS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getReplicas() <em>Replicas</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReplicas()
   * @generated
   * @ordered
   */
  protected int replicas = REPLICAS_EDEFAULT;

  /**
   * The cached value of the '{@link #getContainers() <em>Containers</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainers()
   * @generated
   * @ordered
   */
  protected EList<co7217.dsl.k8s.deployment.Container> containers;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DepImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DeploymentPackage.Literals.DEP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getReplicas()
  {
    return replicas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReplicas(int newReplicas)
  {
    int oldReplicas = replicas;
    replicas = newReplicas;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeploymentPackage.DEP__REPLICAS, oldReplicas, replicas));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<co7217.dsl.k8s.deployment.Container> getContainers()
  {
    if (containers == null)
    {
      containers = new EObjectContainmentEList<co7217.dsl.k8s.deployment.Container>(co7217.dsl.k8s.deployment.Container.class, this, DeploymentPackage.DEP__CONTAINERS);
    }
    return containers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DeploymentPackage.DEP__CONTAINERS:
        return ((InternalEList<?>)getContainers()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DeploymentPackage.DEP__REPLICAS:
        return getReplicas();
      case DeploymentPackage.DEP__CONTAINERS:
        return getContainers();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DeploymentPackage.DEP__REPLICAS:
        setReplicas((Integer)newValue);
        return;
      case DeploymentPackage.DEP__CONTAINERS:
        getContainers().clear();
        getContainers().addAll((Collection<? extends co7217.dsl.k8s.deployment.Container>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DeploymentPackage.DEP__REPLICAS:
        setReplicas(REPLICAS_EDEFAULT);
        return;
      case DeploymentPackage.DEP__CONTAINERS:
        getContainers().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DeploymentPackage.DEP__REPLICAS:
        return replicas != REPLICAS_EDEFAULT;
      case DeploymentPackage.DEP__CONTAINERS:
        return containers != null && !containers.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (Replicas: ");
    result.append(replicas);
    result.append(')');
    return result.toString();
  }

} //DepImpl
